from .IProtocolParser import IProtocolParserChainItem
from utils import AbstractHandler

from utils import AssetType


"""
{'cip.service': '0x83', 'cip.rr': '0x01', 'cip.sc': '0x03', 
'': 'Status: Success: ', 'cip.genstat': '0x00', 'cip.addstat_size': '0', 
'cip.request_path_size': '2', 'cip.path_segment': '0x20', 
'cip.path_segment.type': '1', 'cip.logical_segment.type': '0', 
'cip.logical_segment.format': '0', 'cip.class': '0x01', 
'cip.instance': '0x01', 'cip.getlist.attr_count': '7', 
'cip.attribute': '1', 'cip.getlist.attr_status': '0x00', 
'cip.id.vendor_id': '0x0001', 'cip.id.device_type': '0x000e', 
'cip.id.product_code': '54', 'cip.id.major_rev': '16', 
'cip.id.minor_rev': '20', 'cip.id.status': '0x3060', 'cip.id.owned': '0', 
'cip.id.conf': '0', 'cip.id.ext': '0x0006', 'cip.id.minor_fault1': '0', 
'cip.id.minor_fault2': '0', 'cip.id.major_fault1': '0', 
'cip.id.major_fault2': '0', 'cip.id.ext2': '0x0003', 
'cip.id.serial_number': '0x0051823f', 
'cip.id.product_name': '1756-L61/B LOGIX5561'}
"""
VENDOR_IDS = {
    0x00: "Reserved",
    0x01: "Rockwell Automation/Allen-Bradley",
    0x02: "Namco Controls Corp.",
    0x03: "Honeywell Inc.",
    0x04: "Parker Hannifin Corp. (Veriflo Division)",
    0x05: "Rockwell Automation/Reliance Elec.",
    0x06: "Reserved",
    0x07: "SMC Corporation",
    0x08: "Molex Incorporated",
    0x09: "Western Reserve Controls Corp.",
    0x0A: "Advanced Micro Controls Inc. (AMCI)",
    0x0B: "ASCO Pneumatic Controls",
    0x0C: "Banner Engineering Corp.",
    0x0D: "Belden Wire & Cable Company",
    0x0E: "Cooper Interconnect",
    0x0F: "Reserved",
    0x10: "Daniel Woodhead Co. (Woodhead Connectivity)",
    0x11: "Dearborn Group Inc.",
    0x12: "Reserved",
    0x13: "Helm Instrument Company",
    0x14: "Huron Net Works",
    0x15: "Lumberg Inc.",
    0x16: "Online Development Inc.(Automation Value)",
    0x17: "Vorne Industries Inc.",
    0x18: "ODVA Special Reserve",
    0x19: "Reserved",
    0x1A: "Festo Corporation",
    0x1B: "Reserved",
    0x1C: "Reserved",
    0x1D: "Reserved",
    0x1E: "Unico Inc.",
    0x1F: "Ross Controls",
    0x20: "Reserved",
    0x21: "Reserved",
    0x22: "Hohner Corp.",
    0x23: "Micro Mo Electronics Inc.",
    0x24: "MKS Instruments Inc.",
    0x25: "Yaskawa Electric America formerly Magnetek Drives",
    0x26: "Reserved",
    0x27: "AVG Automation (Uticor)",
    0x28: "Wago Corporation",
    0x29: "Kinetics (Unit Instruments)",
    0x2A: "IMI Norgren Limited",
    0x2B: "BALLUFF Inc.",
    0x2C: "Yaskawa Electric America Inc.",
    0x2D: "Eurotherm Controls Inc",
    0x2E: "ABB Industrial Systems",
    0x2F: "Omron Corporation",
    0x30: "TURCk Inc.",
    0x31: "Grayhill Inc.",
    0x32: "Real Time Automation (C&ID)",
    0x33: "Reserved",
    0x34: "Numatics Inc.",
    0x35: "Lutze Inc.",
    0x36: "Reserved",
    0x37: "Reserved",
    0x38: "Softing GmbH",
    0x39: "Pepperl + Fuchs",
    0x3A: "Spectrum Controls Inc.",
    0x3B: "D.I.P. Inc. MKS Inst.",
    0x3C: "Applied Motion Products Inc.",
    0x3D: "Sencon Inc.",
    0x3E: "High Country Tek",
    0x3F: "SWAC Automation Consult GmbH",
    0x40: "Clippard Instrument Laboratory",
    0x41: "Reserved",
    0x42: "Reserved",
    0x43: "Reserved",
    0x44: "Eaton Electrical",
    0x45: "Reserved",
    0x46: "Reserved",
    0x47: "Toshiba International Corp.",
    0x48: "Control Technology Incorporated",
    0x49: "TCS (NZ) Ltd.",
    0x4A: "HitachiLtd.",
    0x4B: "ABB Robotics Products AB",
    0x4C: "NKE Corporation",
    0x4D: "Rockwell Software Inc.",
    0x4E: "Escort Memory Systems (A Datalogic Group Co.)",
    0x4F: "Reserved",
    0x50: "Industrial Devices Corporation",
    0x51: "IXXAT Automation GmbH",
    0x52: "Mitsubishi Electric Automation Inc.",
    0x53: "OPTO-22",
    0x54: "Reserved",
    0x55: "Reserved",
    0x56: "Horner Electric",
    0x57: "Burkert Werke GmbH & Co. KG",
    0x58: "Reserved",
    0x59: "Industrial Indexing Systems Inc.",
    0x5A: "HMS Industrial Networks AB",
    0x5B: "Robicon",
    0x5C: "Helix Technology (Granville-Phillips)",
    0x5D: "Arlington Laboratory",
    0x5E: "Advantech Co. Ltd.",
    0x5F: "Square D Company",
    0x60: "Digital Electronics Corp.",
    0x61: "Danfoss",
    0x62: "Reserved",
    0x63: "Reserved",
    0x64: "Bosch Rexroth Corporation] = Pneumatics"  # NOTE: formatting might need cleanup
}

DEVICE_TYPES = {
    0x00: "Generic Device (deprecated)",
    0x02: "AC Drive",
    0x03: "Motor Overload",
    0x04: "Limit Switch",
    0x05: "Inductive Proximity Switch",
    0x06: "Photoelectric Sensor",
    0x07: "General Purpose Discrete I/O",
    0x09: "Resolver",
    0x0C: "Communications Adapter",
    0x0E: "Programmable Logic Controller",
    0x10: "Position Controller",
    0x13: "DC Drive",
    0x15: "Contactor",
    0x16: "Motor Starter",
    0x17: "Soft Start",
    0x18: "Human-Machine Interface",
    0x1A: "Mass Flow Controller",
    0x1B: "Pneumatic Valve",
    0x1C: "Vacuum Pressure Gauge",
    0x1D: "Process Control Value",
    0x1E: "Residual Gas Analyzer",
    0x1F: "DC Power Generator",
    0x20: "RF Power Generator",
    0x21: "Turbomolecular Vacuum Pump",
    0x22: "Encoder",
    0x23: "Safety Discrete I/O Device",
    0x24: "Fluid Flow Controller",
    0x25: "CIP Motion Drive",
    0x26: "CompoNet Repeater",
    0x27: "Mass Flow Controller Enhanced",
    0x28: "CIP Modbus Device",
    0x29: "CIP Modbus Translator",
    0x2A: "Safety Analog I/O Device",
    0x2B: "Generic Device (keyable)",
    0x2C: "Managed Switch",
    0x3B: "ControlNet Physical Layer Component"
}

device_type_to_asset_type = {
    0x02: AssetType.Drive,
    0x03: AssetType.Actuator,
    0x04: AssetType.Sensor,
    0x05: AssetType.Sensor,
    0x06: AssetType.Sensor,
    0x07: AssetType.Actuator,
    0x09: AssetType.Sensor,
    0x0C: AssetType.Gateway,
    0x0E: AssetType.Plc,
    0x10: AssetType.Controller,
    0x13: AssetType.Drive,
    0x15: AssetType.Actuator,
    0x16: AssetType.Actuator,
    0x17: AssetType.Drive,
    0x18: AssetType.Hmi,
    0x1A: AssetType.Controller,
    0x1B: AssetType.Actuator,
    0x1C: AssetType.Sensor,
    0x1D: AssetType.Actuator,
    0x1E: AssetType.Sensor,
    0x1F: AssetType.Controller,
    0x20: AssetType.Controller,
    0x21: AssetType.Controller,
    0x22: AssetType.Sensor,
    0x23: AssetType.Actuator,
    0x24: AssetType.Controller,
    0x25: AssetType.Drive,
    0x26: AssetType.Gateway,
    0x27: AssetType.Controller,
    0x28: AssetType.Gateway,
    0x29: AssetType.Gateway,
    0x2A: AssetType.Sensor,
    0x2B: AssetType.Unknown,
    0x2C: AssetType.Switch,
    0x3B: AssetType.Controller
}

class CipParser(IProtocolParserChainItem, AbstractHandler):
    def __init__(self):
        super().__init__('cip')
        
    
    def aggregate(self, packet):
        if 'cip' not in packet: return {}
        cip = packet.cip._all_fields
        
        
        return {
            'name': cip.get('cip.id.product_name'),
            'serial_number': cip.get('cip.id.serial_number'),
            'vendor': VENDOR_IDS.get(int(cip.get('cip.id.vendor_id'),16) if cip.get('cip.id.vendor_id') else -1),
            'device_type': device_type_to_asset_type.get(int(cip.get('cip.id.device_type'),16),AssetType.Unknown) if cip.get('cip.id.device_type') else None
        }


